groups:
- name: app.rules
  rules:
  - alert: ContainerRestart
    expr: rate(kube_pod_container_status_restarts_total[5m]) > 0
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: "Pod {{ $labels.pod }} is restarting"
      description: "Container is restarting frequently in namespace {{ $labels.namespace }}."

  - alert: HighCPUUsage
    expr: sum by (pod, namespace) (rate(container_cpu_usage_seconds_total[2m])) 
          / sum by (pod, namespace) (kube_pod_container_resource_limits_cpu_cores) > 0.8
    for: 2m
    labels:
      severity: critical
    annotations:
      summary: "Pod {{ $labels.pod }} high CPU usage"
      description: "CPU usage >80% of requested cores for pod {{ $labels.pod }}."

  - alert: HighMemoryUsage
    expr: sum by (pod, namespace) (container_memory_usage_bytes) 
          / sum by (pod, namespace) (kube_pod_container_resource_limits_memory_bytes) > 0.8
    for: 2m
    labels:
      severity: critical
    annotations:
      summary: "Pod {{ $labels.pod }} high memory usage"
      description: "Memory usage >80% of memory limit for pod {{ $labels.pod }}."

  - alert: Module2MetricsEndpointDown
    expr: absent(up{job="sample-app"} == 1)
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: "Module 2 metrics endpoint unreachable"
      description: "Prometheus cannot scrape /metrics from Module 2 app."
